# Notify when Raspberry Pi CPU temperature goes above 59C
- alias: Notify CPU hot
  initial_state: on
  trigger:
  - above: '65'
    entity_id: sensor.cpu_temperature
    platform: numeric_state
  condition: []
  action:
  - data:
      message: Raspberry Pi CPU temperature is {{ states.sensor.cpu_temperature.state
        }} C
    service: notify.telegram
# Notify when Waze reports work travel time will be longer than 25 min
- alias: Notify work travel time long
  initial_state: on
  trigger:
  - above: '25'
    entity_id: sensor.waze_travel_time
    platform: numeric_state
  condition:
  - after: 07:00:00
    before: 08:30:00
    condition: time
  action:
  - data:
      message: Travel time to work is {{ states.sensor.waze_travel_time.state }} minutes
        via {{ states.sensor.waze_travel_time.attributes.route }}!
    service: notify.telegram
# Notify when Home Assistant update is available
- alias: Notify Home Assistant update available
  initial_state: on
  trigger:
  - entity_id: sensor.ha_upstream
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.sensor.ha_upstream.state != ''unavailable'' }}'
  - condition: template
    value_template: '{{ states.sensor.ha_upstream.state != states.sensor.current_version.state  }}'
  action:
  - data:
      message: 'Home Assistant version {{ states.sensor.ha_upstream.state }} is available:
        https://github.com/home-assistant/home-assistant/releases/tag/{{ states.sensor.ha_upstream.state
        }}'
    service: notify.telegram
# Notify when crime reported within 2 miles of home
- alias: Notify crime report
  initial_state: on
  trigger:
  - platform: event
    event_type: crimereports_incident
  action:
  - service: notify.telegram
    data_template:
      message: '{{ trigger.event.data.type }} occured at {{ trigger.event.data.location
        }} at {{ trigger.event.data.timestamp }}. {{ trigger.event.data.description
        }}.'
# Notify when basement Xiaomi humidity sensor reports above 65%
- alias: Notify humidity high
  initial_state: on
  trigger:
  - above: '65'
    entity_id: sensor.basement_sensor_humidity
    platform: numeric_state
  condition: []
  action:
  - data:
      message: 'Basement humidity is {{ states.sensor.basement_sensor_humidity.state }}%! Check the dehumidifier.'
    service: notify.telegram
  - service: shell_command.blink1_flash_red
# Notify when bedroom Xiaomi temperature sensor reports above 25c when im not home
- alias: Notify temperature high
  initial_state: on
  trigger:
  - above: '25'
    entity_id: sensor.bedroom_sensor_temperature
    platform: numeric_state
  condition:
    - condition: state
      entity_id: binary_sensor.my_presence
      state: 'off'
  action:
    service: notify.telegram
    data_template:
      message: Bedroom temperature is {{ states.sensor.bedroom_sensor_temperature.state }}{{ states.sensor.bedroom_sensor_temperature.attributes.unit_of_measurement }}!
# Notify when Xiaomi humidity sensor battery drops below 20%
- alias: Notify humidity sensor battery low
  initial_state: on
  trigger:
  - below: '20'
    entity_id:
      - sensor.basement_sensor_battery
      - sensor.bedroom_sensor_battery
    platform: numeric_state
  action:
  - data_template:
      message: '{{ trigger.from_state.attributes.friendly_name }} is at {{ trigger.to_state.state }}%. Change the battery soon.'
    service: notify.telegram
# Warn move car Tuesday if home
- alias: Warn car Tues
  initial_state: on
  trigger:
    platform: time
    at: '11:30:00'
  condition:
  - condition: time
    weekday:
      - tue
  - condition: state
    entity_id: 'binary_sensor.my_presence'
    state: 'on'
  action:
    service: notify.telegram
    data:
      message: "It's Tuesday, move your car before noon!"
# Warn move car Wednesday if home
- alias: Warn car Weds
  initial_state: on
  trigger:
    platform: time
    at: '07:30:00'
  condition:
  - condition: time
    weekday:
      - wed
  - condition: state
    entity_id: 'binary_sensor.my_presence'
    state: 'on'
  action:
    service: notify.telegram
    data:
      message: "It's Wednesday, move your car before 8!"

# Publish room temp and timestamp to MQTT every 20 min
- alias: Canary
  initial_state: on
  trigger:
    platform: time_pattern
    minutes: '/20'
  action:
    service: mqtt.publish
    data:
      topic: 'home-assistant/canary'
      payload_template: " \"Temperature\":  \"{{states('sensor.bedroom_sensor_temperature')}}\", \"Time\": \"{{states('sensor.time_utc')}}\" "

# Warn if mailbox left open
- alias: Mailbox left open
  initial_state: on
  trigger:
    platform: state
    entity_id: !secret wyze_door_mailbox
    to: 'on'
    for:
      minutes: 1
  action:
    - service: notify.telegram
      data:
        message: "Mailbox has been left open."
